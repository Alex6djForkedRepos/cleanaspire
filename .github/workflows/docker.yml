name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "deploy/**"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "deploy/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get next version
        uses: reecetech/version-increment@2024.10.1
        id: version
        with:
          scheme: semver
          increment: patch

      - run: git tag ${{ steps.version.outputs.version }}
      - run: git push origin ${{ steps.version.outputs.version }}    

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push CleanAspire.Standalone image
        run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/cleanaspire-standalone:${{ steps.version.outputs.version }} -f src/CleanAspire.ClientApp/Dockerfile .
            docker push ${{ secrets.DOCKER_USERNAME }}/cleanaspire-standalone:${{ steps.version.outputs.version }}    
      - name: Build and push CleanAspire.WebApp image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cleanaspire-webapp:${{ steps.version.outputs.version }} -f src/CleanAspire.WebApp/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/cleanaspire-webapp:${{ steps.version.outputs.version }}

      - name: Build and push CleanAspire.Api image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cleanaspire-api:${{ steps.version.outputs.version }} -f src/CleanAspire.Api/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/cleanaspire-api:${{ steps.version.outputs.version }}

      - name: Update version in docker-compose file
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Updating docker-compose file with version ${{ steps.version.outputs.version }}"
          sed -i 's#blazordevlab/cleanaspire-api:[0-9a-zA-Z\.\-]*#blazordevlab/cleanaspire-api:${{ steps.version.outputs.version }}#' deploy/docker-compose.yml
          sed -i 's#blazordevlab/cleanaspire-webapp:[0-9a-zA-Z\.\-]*#blazordevlab/cleanaspire-webapp:${{ steps.version.outputs.version }}#' deploy/docker-compose.yml
          sed -i 's#blazordevlab/cleanaspire-standalone:[0-9a-zA-Z\.\-]*#blazordevlab/cleanaspire-standalone:${{ steps.version.outputs.version }}#' deploy/docker-compose.yml

      - name: Create Pull Request branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Create a new branch to update docker-compose file
          NEW_BRANCH="update-compose-version-${{ steps.version.outputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b $NEW_BRANCH
          git add deploy/docker-compose.yml
          git commit -m "Update Docker Compose file to version ${{ steps.version.outputs.version }}"
          git push origin $NEW_BRANCH

      - name: Create Pull Request with GitHub CLI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.ACTION_TOKEN }}
        run: |
          NEW_BRANCH="update-compose-version-${{ steps.version.outputs.version }}"
          gh pr create --base main --head $NEW_BRANCH \
            --title "Update Docker Compose to version ${{ steps.version.outputs.version }}" \
            --body "Automatically updating Docker Compose file version references to ${{
            steps.version.outputs.version }}"
        

