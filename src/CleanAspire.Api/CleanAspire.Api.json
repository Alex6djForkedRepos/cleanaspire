{
  "openapi": "3.0.1",
  "info": {
    "title": "CleanAspire.Api | v1",
    "version": "1.0.0"
  },
  "paths": {
    "/upload": {
      "post": {
        "tags": [
          "File Upload"
        ],
        "summary": "Upload files to the server",
        "description": "Allows uploading multiple files to a specific folder on the server.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "folder",
                  "files"
                ],
                "type": "object",
                "properties": {
                  "folder": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "The folder path where the files should be uploaded."
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Indicates whether to overwrite existing files."
                  },
                  "files": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IFormFile"
                    },
                    "description": "The list of files to be uploaded."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileUploadResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/upload/image": {
      "post": {
        "tags": [
          "File Upload"
        ],
        "summary": "Upload images to the server with cropping options",
        "description": "Allows uploading multiple image files with optional cropping options to a specific folder on the server.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "folder",
                  "files"
                ],
                "type": "object",
                "properties": {
                  "folder": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "The folder path where the files should be uploaded."
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Indicates whether to overwrite existing files."
                  },
                  "files": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IFormFile"
                    },
                    "description": "The list of files to be uploaded."
                  },
                  "cropSize": {
                    "type": "object",
                    "properties": {
                      "width": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The width of the cropped image.",
                        "format": "int32"
                      },
                      "height": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The height of the cropped image.",
                        "format": "int32"
                      }
                    },
                    "description": "The desired crop size for the uploaded image.",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileUploadResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/upload/{path}": {
      "get": {
        "tags": [
          "File Upload"
        ],
        "summary": "Download or preview a file from the server",
        "description": "Allows clients to download or preview a file by specifying the folder and file name.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "File Upload"
        ],
        "summary": "Delete a file from the server",
        "description": "Allows clients to delete a file by specifying the folder and file name.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "Get all tenants",
        "description": "Returns a list of all tenants in the system.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenants"
        ],
        "summary": "Create a new tenant",
        "description": "Creates a new tenant with the provided details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "tenants"
        ],
        "summary": "Update an existing tenant",
        "description": "Updates the details of an existing tenant.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "tenants"
        ],
        "summary": "Delete tenants by IDs",
        "description": "Deletes one or more tenants by their unique IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/tenants/{id}": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "Get tenant by ID",
        "description": "Returns the details of a specific tenant by their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDto"
                }
              }
            }
          }
        }
      }
    },
    "/weatherforecast": {
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Get the weather forecast for the next 5 days.",
        "description": "Returns an array of weather forecast data including the date, temperature, and weather summary for the next 5 days. Each forecast entry provides information about the expected temperature and a brief summary of the weather conditions.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/confirmEmail": {
      "get": {
        "tags": [
          "CleanAspire.Api"
        ],
        "operationId": "MapIdentityApi-/confirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/resendConfirmationEmail": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/forgotPassword": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/resetPassword": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/manage/2fa": {
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/manage/info": {
      "get": {
        "tags": [
          "CleanAspire.Api"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "CleanAspire.Api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/identity/logout": {
      "post": {
        "tags": [
          "Authentication",
          "Identity Management"
        ],
        "summary": "Log out the current user.",
        "description": "Logs out the currently authenticated user by signing them out of the system. This endpoint requires the user to be authorized before calling, and returns an HTTP 200 OK response upon successful logout.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/identity/profile": {
      "get": {
        "tags": [
          "Authentication",
          "Identity Management"
        ],
        "summary": "Retrieve the user's profile",
        "description": "Fetches the profile information of the authenticated user. Returns 404 if the user is not found. Requires authorization.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Authentication",
          "Identity Management"
        ],
        "summary": "Update user profile information.",
        "description": "Allows users to update their profile, including username, email, nickname, avatar, time zone, and language code.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "username",
                  "email"
                ],
                "type": "object",
                "properties": {
                  "nickname": {
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9_]*$",
                    "type": "string",
                    "description": "User's preferred nickname.",
                    "nullable": true
                  },
                  "username": {
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9_]*$",
                    "type": "string",
                    "description": "Unique username for the user."
                  },
                  "email": {
                    "maxLength": 80,
                    "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string",
                    "description": "User's email address. Must be in a valid email format."
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User uploads an avatar image.",
                    "format": "binary",
                    "nullable": true
                  },
                  "timeZoneId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "User's time zone identifier, e.g., 'UTC', 'America/New_York'.",
                    "nullable": true
                  },
                  "languageCode": {
                    "maxLength": 10,
                    "pattern": "^[a-z]{2,3}(-[A-Z]{2})?$",
                    "type": "string",
                    "description": "User's preferred language code, e.g., 'en-US'.",
                    "nullable": true
                  },
                  "superiorId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Tenant identifier for multi-tenant systems. Must be a GUID in version 7 format.",
                    "nullable": true
                  },
                  "tenantId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Tenant identifier for multi-tenant systems. Must be a GUID in version 7 format.",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Identity.Application": [ ]
          }
        ]
      }
    },
    "/account/signup": {
      "post": {
        "tags": [
          "Authentication",
          "Identity Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/account/confirmEmail": {
      "get": {
        "tags": [
          "Authentication",
          "Identity Management"
        ],
        "operationId": "MapIdentityApiAdditionalEndpoints-/account/confirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "required": [
          "accessToken",
          "expiresIn",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "CreateTenantCommand": {
        "required": [
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "FileUploadResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The full URL to access the uploaded file."
          },
          "path": {
            "type": "string",
            "description": "The path where the uploaded file is saved."
          },
          "size": {
            "type": "integer",
            "description": "The size of the uploaded file in bytes.",
            "format": "int64"
          }
        }
      },
      "ForgotPasswordRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "IFormFile": {
        "type": "string",
        "format": "binary"
      },
      "InfoRequest": {
        "type": "object",
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InfoResponse": {
        "required": [
          "email",
          "isEmailConfirmed"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "email": "administrator",
          "password": "P@ssw0rd!"
        }
      },
      "ProfileResponse": {
        "required": [
          "userId",
          "username",
          "email",
          "isEmailConfirmed"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          },
          "timeZoneId": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "superiorId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "Edd.Howell3@hotmail.com",
          "password": "P@ssw0rd!"
        }
      },
      "ResendConfirmationEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "required": [
          "email",
          "resetCode",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "SignupRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string",
            "description": "User's email address. Must be in a valid email format."
          },
          "password": {
            "maxLength": 20,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,50}$",
            "type": "string",
            "description": "User's password. Must meet the security criteria."
          },
          "nickname": {
            "maxLength": 50,
            "type": "string",
            "description": "User's preferred nickname.",
            "nullable": true
          },
          "provider": {
            "maxLength": 20,
            "type": "string",
            "description": "Authentication provider, e.g., Local or Google.",
            "nullable": true
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant identifier for multi-tenant systems. Must be a GUID in version 7 format.",
            "nullable": true
          },
          "timeZoneId": {
            "maxLength": 50,
            "type": "string",
            "description": "User's time zone identifier, e.g., 'UTC', 'America/New_York'.",
            "nullable": true
          },
          "languageCode": {
            "maxLength": 10,
            "pattern": "^[a-z]{2,3}(-[A-Z]{2})?$",
            "type": "string",
            "description": "User's preferred language code, e.g., 'en-US'.",
            "nullable": true
          }
        },
        "example": {
          "Email": "Thad10@hotmail.com",
          "Password": "P@ssw0rd!",
          "Nickname": "exampleNickname",
          "Provider": "Local",
          "TenantId": "123e4567-e89b-47d3-a456-426614174000",
          "TimeZoneId": "America/New_York",
          "LanguageCode": "en-US"
        }
      },
      "TenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorResponse": {
        "required": [
          "sharedKey",
          "recoveryCodesLeft",
          "isTwoFactorEnabled",
          "isMachineRemembered"
        ],
        "type": "object",
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "Unit": {
        "type": "object"
      },
      "UpdateTenantCommand": {
        "required": [
          "id",
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "required": [
          "date",
          "temperatureC",
          "summary"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "Identity.Application": {
        "type": "apiKey",
        "description": "Use this cookie to authenticate the user.",
        "name": "Identity.Application",
        "in": "cookie"
      }
    }
  },
  "tags": [
    {
      "name": "File Upload"
    },
    {
      "name": "tenants"
    },
    {
      "name": "Weather"
    },
    {
      "name": "CleanAspire.Api"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "Identity Management"
    }
  ]
}